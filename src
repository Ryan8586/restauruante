-- Recriar o banco de dados do zero (remova o banco existente)
DROP DATABASE IF EXISTS Restaurante;
CREATE DATABASE Restaurante;
USE Restaurante;

-- Criar a tabela de clientes
CREATE TABLE Clientes (
    id_cliente INT AUTO_INCREMENT PRIMARY KEY,
    nome VARCHAR(100) NOT NULL,
    telefone VARCHAR(15) NOT NULL
);

-- Criar a tabela de pratos
CREATE TABLE Pratos (
    id_prato INT AUTO_INCREMENT PRIMARY KEY,
    nome VARCHAR(100) NOT NULL,
    preco DECIMAL(10, 2) NOT NULL
);

-- Criar a tabela de pedidos
CREATE TABLE Pedidos (
    id_pedido INT AUTO_INCREMENT PRIMARY KEY,
    id_cliente INT NOT NULL,
    data_pedido DATE NOT NULL,
    FOREIGN KEY (id_cliente) REFERENCES Clientes(id_cliente)
);

-- Criar a tabela de itens do pedido
CREATE TABLE Itens_Pedido (
    id_item INT AUTO_INCREMENT PRIMARY KEY,
    id_pedido INT NOT NULL,
    id_prato INT NOT NULL,
    quantidade INT NOT NULL,
    FOREIGN KEY (id_pedido) REFERENCES Pedidos(id_pedido),
    FOREIGN KEY (id_prato) REFERENCES Pratos(id_prato)
);

-- Inserir dados fictícios na tabela de clientes
INSERT INTO Clientes (nome, telefone) VALUES
('João Silva', '123456789'),
('Maria Oliveira', '987654321'),
('Carlos Santos', '456123789'),
('Ana Souza', '789456123'),
('Pedro Lima', '321654987');

-- Inserir dados fictícios na tabela de pratos
INSERT INTO Pratos (nome, preco) VALUES
('Lasanha', 25.00),
('Pizza Margherita', 30.00),
('Salada Caesar', 20.00),
('Bife com Fritas', 35.00),
('Sopa de Legumes', 15.00);

-- Inserir dados fictícios na tabela de pedidos
INSERT INTO Pedidos (id_cliente, data_pedido) VALUES
(1, '2024-12-01'),
(2, '2024-12-02'),
(3, '2024-12-03');

-- Inserir dados fictícios na tabela de itens do pedido
INSERT INTO Itens_Pedido (id_pedido, id_prato, quantidade) VALUES
(1, 1, 2), -- João pediu 2 Lasanhas
(1, 3, 1), -- João pediu 1 Salada Caesar
(2, 2, 1), -- Maria pediu 1 Pizza Margherita
(2, 5, 3), -- Maria pediu 3 Sopas de Legumes
(3, 4, 1), -- Carlos pediu 1 Bife com Fritas
(3, 1, 1); -- Carlos pediu 1 Lasanha

-- Consultas para verificar os dados inseridos
-- 1. Listar todos os clientes
SELECT * FROM Clientes;

-- 2. Listar todos os pratos
SELECT * FROM Pratos;

-- 3. Listar todos os pedidos com detalhes do cliente
SELECT p.id_pedido, c.nome AS cliente, p.data_pedido
FROM Pedidos p
JOIN Clientes c ON p.id_cliente = c.id_cliente;

-- 4. Detalhes dos itens de cada pedido
SELECT i.id_pedido, pr.nome AS prato, i.quantidade, pr.preco, (i.quantidade * pr.preco) AS total
FROM Itens_Pedido i
JOIN Pratos pr ON i.id_prato = pr.id_prato
ORDER BY i.id_pedido;

-- 5. Total gasto por pedido
SELECT p.id_pedido, SUM(i.quantidade * pr.preco) AS total_gasto
FROM Pedidos p
JOIN Itens_Pedido i ON p.id_pedido = i.id_pedido
JOIN Pratos pr ON i.id_prato = pr.id_prato
GROUP BY p.id_pedido;
